kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: {{ .Values.name | quote }}
  labels:
    app: {{ .Values.name | quote }}
    template: deployer
  annotations:
    description: Defines how to deploy the application server
    template.alpha.openshift.io/wait-for-ready: 'true'
spec:
  strategy:
    type: Rolling
  triggers:
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      -  {{ .Values.name | quote }}
      from:
        kind: ImageStreamTag
        name: {{ print .Values.imageStreamTag | quote }}
  - type: ConfigChange
  replicas: {{ .Values.replicas }}
  selector:
    name: {{ .Values.name | quote }}
  template:
    metadata:
      name: {{ .Values.name | quote }}
      labels:
        name: {{ .Values.name | quote }}
    spec:
      revisionHistoryLimit: 10,
      strategy:
        type: Rolling
      containers:
      - env:
          {{- range .Values.env_vars }}
          - name: {{ .key }}
            value: {{ .value  | quote }}
          {{- end }}
        envFrom:
        {{- range .Values.secrets }}
          {{- if .prefix }}
          - prefix: {{ .prefix }} 
            secretRef:
              name: {{ .name | quote }}
          {{- else }}
          - secretRef:
              name: {{ .name | quote }}
          {{- end }}
        {{- end }}
        {{- range .Values.configmaps }}
          {{- if .prefix }}
          - prefix: {{ .prefix }} 
            configMapRef:
              name: {{ .name | quote }}
          {{- else }}
          - configMapRef:
              name: {{ .name | quote }}
          {{- end }}
        {{- end }}        
        name: {{ .Values.name | quote }}
        image: " "
        ports:
        - containerPort: 8080
        {{- if .Values.readinessProbeGet }}
        readinessProbe:
          timeoutSeconds: {{ .Values.readiness_timeout | default 5 }}
          initialDelaySeconds: {{ .Values.readiness_delay | default 5 }}
          httpGet:
            path: {{ .Values.readinessProbeGet | quote }}
            port: 8080
        {{- end }}
        {{- if .Values.livenessProbeGet }}
        livenessProbe:
          timeoutSeconds: {{ .Values.liveness_timeout | default 3 }}
          initialDelaySeconds: {{ .Values.liveness_delay | default 3 }}
          httpGet:
            path: {{ .Values.livenessProbeGet | quote }}
            port: 8080
        {{- end }}
        resources:
          limits:
            memory: {{ .Values.memory_limit | quote }}
        {{- if .Values.volumeMounts }}
        volumeMounts:
        {{- range .Values.volumeMounts }}
          - name: {{ .name }}
            mountPath: {{ .mountPath}}
        {{- end}}
        {{- end }}
      volumes:
      {{- if .Values.secretVolumes }}
      {{- range .Values.secretVolumes }}
        - name: {{ .name }}
          secret: 
            defaultMode: {{ .defaultMode}}
            secretName: {{ .secretName}}
      {{- end}}
      {{- end }}
      {{- if .Values.pvcs }}
      {{- range .Values.pvcs }}
        - name: {{ .name | quote }}
          persistentVolumeClaim:
            claimName: {{ .name | quote }}
      {{- end }}
      {{- end }}